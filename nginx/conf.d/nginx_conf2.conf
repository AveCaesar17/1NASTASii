
map $http_upgrade $connection_upgrade {
    default   upgrade;
    ''        close;
}
# server {
#     listen 80;
#     server_name {{ YOURDOMAIN }};
#     location / {
#         return 301 https://$host$request_uri;
#     }    
#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }
# }
server {
    listen 80;
    server_name ${YOURYOURDOMAIN};
    location / {
        return 301 https://$host$request_uri;
    }    
    location /.well-known/acme-challenge/ {
      content_by_lua_block {
        auto_ssl:challenge_server()
      }
#        root /var/www/certbot;
    }
}
server {
    include mime.types;
    listen 443;
    server_name  ${YOURYOURDOMAIN};

    modsecurity on;
    modsecurity_rules_file /opt/ModSecurity/main.conf;
    
    client_body_buffer_size 1k;
    client_header_buffer_size 2k;
    large_client_header_buffers 2 1k;
    add_header X-Frame-Options sameorigin always;

#    include /options-ssl-nginx.conf;


    add_header Strict-Transport-Security "max-age=31536000; includeSubYOURDOMAINs; preload";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

#    ssl_dhparam /ssl-dhparams.pem;
    client_max_body_size 20M;
   
    location / {
       
 #      allow all;
        proxy_set_header        Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        
        proxy_intercept_errors on;

            
   
        
    } 
        
      
     
location @error401 {
        return 302 /you_idiot; # this page holds the login form
    }
    location /you_idiot {
     
        auth_basic off;
        root /etc/video/;
        index /you_idiot;        
        proxy_cache_valid 200 300s;
        proxy_cache_lock on;

        proxy_http_version 1.1;
        proxy_cache_lock_timeout 0s;
        proxy_cache_lock_age 200s;
        proxy_cache_use_stale updating;
    }
}
